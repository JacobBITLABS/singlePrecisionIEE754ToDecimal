(function(){"use strict";var t={8041:function(t,i,s){var a=s(144),e=function(){var t=this,i=t._self._c;return i("div",[i("div",{staticClass:"margin-div"},[i("IEEE754FloatingPointVisualiser")],1)])},r=[],n=function(){var t=this,i=t._self._c;return i("div",[t._m(0),i("div",{staticClass:"input-div"},[i("b-form-input",{staticClass:"text-input",attrs:{placeholder:"Enter IEEE 754 to convert"},on:{input:function(i){t.bitStringToConvert=t.inputText,t.arrangeTextInput()}},model:{value:t.inputText,callback:function(i){t.inputText=i},expression:"inputText"}})],1),t.inputOk?t._e():i("p",{staticClass:"failInInput"},[t._v("Input Incorrect. Only '1' and '0' are accepted as input.")]),32==t.bitStringToConvert.length&&t.inputOk?i("b-container",{staticClass:"input-split"},[i("b-row",[i("b-col",{staticClass:"signBit"},[t._v(" "+t._s(this.bitStringToConvert.substring(0,1))+" "),i("span",{staticClass:"signBit",attrs:{id:"signBit"}},[t._v("Sign")])]),i("b-col",{staticClass:"exponentBits"},[t._v(" "+t._s(this.bitStringToConvert.substring(1,9))+" "),i("span",{staticClass:"exponentBits",attrs:{id:"exponentBits"}},[t._v("Exponent")])]),i("b-col",{staticClass:"mantissaBits"},[t._v(" "+t._s(this.bitStringToConvert.substring(9))+" "),i("span",{staticClass:"mantissaBits",attrs:{id:"mantissaBits"}},[t._v("Mantissa")])])],1)],1):t._e(),32==t.bitStringToConvert.length&&t.inputOk?i("b-container",{staticStyle:{width:"100%",margin:"0, auto"}},[i("b-row",{staticClass:"cal-card-row"},[i("b-col",[i("b-card",{staticClass:"mb-2 card",attrs:{id:"exponent-card"}},[i("p",{staticClass:"exponentTitle subTitle"},[t._v("1. Calculate the exponent (e)")]),i("b-container",{staticClass:"bv-example-row"},[i("b-row",[t._l(t.bitStringAsArray,(function(s){return i("b-col",{key:s,staticClass:"eksponent-bins"},[t._v(t._s(s.bit))])})),i("div",{staticClass:"w-100"}),t._l(t.powerArray,(function(s){return i("b-col",{key:s,staticClass:"eksponent-bins"},[t._v(" 2 "),i("sup",[t._v(t._s(s.power))])])}))],2)],1),i("p"),t.bitStringToConvert.length>0?i("p",[t._v(' All the bits representing 1 is "activating" their corresponding 2 '),i("sup",[t._v("power")])]):t._e(),t._l(t.calArray,(function(s,a){return i("div",{key:s,staticClass:"calculation"},[t._v(" 2 "),i("sup",[t._v(t._s(s.dig))]),a==t.calArray.length-1?i("p",{staticClass:"calculation"},[t._v(" = ")]):i("p",{staticClass:"calculation"},[t._v(" + ")])])})),this.calResult>0?i("p",{staticClass:"calculation",attrs:{id:"resultP"}},[t._v(t._s(t.calResult.toString())+" -127 = "+t._s(t.calResult.toString()-127))]):t._e(),t.bitStringToConvert.length>0?i("p",[t._v("We subtract 127 from the result in order to adjust for the bias. In IEEE-754 representation, the exponent is stored as an 8-bit value. When this value is 0000 0000, the actual value of the exponent is -127. When the value is 1111 1111, the actual value of the exponent is 128. This allows us to handle negative values without using two's complement")]):t._e()],2)],1)],1),i("b-row",{staticClass:"cal-card-row"},[i("b-col",[i("b-card",{staticClass:"mb-2 card",attrs:{id:"mantissa-card"}},[i("p",{staticClass:"mantissaTitle subTitle"},[t._v("2. Calculate the mantissa (m)")]),i("b-container",{staticClass:"bv-example-row"},[i("b-row",[t._l(t.bitStringAsArrayM,(function(s){return i("b-col",{key:s,staticClass:"eksponent-bins"},[t._v(t._s(s.bit))])})),i("div",{staticClass:"w-100"}),t._l(t.powerArrayMdisplay,(function(s){return i("b-col",{key:s,staticClass:"eksponent-bins"},[t._v(" 2 "),i("sup",[t._v(t._s(s.power))])])}))],2)],1),i("p"),t.bitStringToConvert.length>0?i("p",[t._v(' All the bits representing 1 is "activating" their corresponding 2 '),i("sup",[t._v("power")])]):t._e(),t._l(t.calArrayM,(function(s,a){return i("div",{key:s,staticClass:"calculation"},[t._v(" 2 "),i("sup",[t._v(t._s(s.dig))]),a==t.calArrayM.length-1?i("p",{staticClass:"calculation"},[t._v(" = ")]):i("p",{staticClass:"calculation"},[t._v(" + ")])])})),this.calResult>0?i("p",{staticClass:"mantissaCal calculation",attrs:{id:"resultMantissa"}},[t._v(t._s(t.calResultM))]):t._e(),t.bitStringToConvert.length>0?i("p",[t._v(" Since the binary floating point numbers are of the from (1."+t._s(t.bitStringToConvert.substring(10,32))+" x 2 "),i("sup",[t._v("e")]),t._v("), the mantissa represents everything after the binary point. The '1.' is implicit! It is omitted in order to save a bit internally, and that's why we have to add 1 to the mantissa below ")]):t._e()],2)],1)],1),i("b-row",{staticClass:"cal-card-row"},[i("b-col",[i("b-card",{staticClass:"mb-2 card",attrs:{id:"formula-card"}},[i("p",{staticClass:"subTitle",attrs:{id:"formula-title"}},[t._v("3. Plug into the formula")]),i("div",{staticClass:"formula-section"},[i("div",{staticClass:"formula-details"},[t._v(" (-1) "),i("sup",{staticClass:"formula-details signBit"},[t._v("s")]),t._v(" x (1+ "),i("p",{staticClass:"formula-details mantissaTitle"},[t._v("m")]),t._v(") x 2 "),i("sup",{staticClass:"formula-details exponentTitle"},[t._v("e")])]),i("div",{staticClass:"formulaCal"},[t._v(" (-1) "),i("sup",{staticClass:"formula-details signBit"},[t._v(t._s(t.inputText.charAt(0)))]),t._v(" x (1+ "),i("p",{staticClass:"formula-details mantissaTitle"},[t._v(t._s(t.calResultM))]),t._v(") x 2 "),i("sup",{staticClass:"formula-details exponentTitle"},[t._v(t._s(t.calResult-127))])]),i("p",{staticClass:"calculationsFormula"},[t._v(" = "+t._s(Math.pow(-1,parseInt(t.inputText.charAt(0)))*(1+t.calResultM))+" x 2 "),i("sup",[t._v(t._s(t.calResult-127))])])])])],1)],1)],1):t._e()],1)},l=[function(){var t=this,i=t._self._c;return i("div",{staticClass:"header-div"},[i("h1",[t._v("IEEE 754 Single-Precision Floating Point Converter")]),i("p",[t._v("Convert from 754 Singe-Precision Floating Point to Decimal. See the interactive calculator below.")])])}],o=(s(7658),{data(){return{inputText:"10011000100100001000000000000000",bitStringToConvert:"",bitStringAsArray:[],powerArray:[],calArray:[],calResult:0,bitStringAsArrayM:[],powerArrayM:[],powerArrayMdisplay:[],calArrayM:[],calResultM:0,inputOk:!0,calculations:[]}},methods:{testIEE754String(t){var i=parseFloat(t);return isFinite(i)&&!isNaN(i)},arrangeTextInput(){var t=/^[01]{32}$/;32==this.inputText.length&&t.test(this.inputText)?this.testIEE754String(this.inputText)&&(this.inputOk=!0,this.setCalsAndCalculate()):this.inputOk=!1},setCalsAndCalculate(){this.bitStringAsArray=[],this.powerArray=[],this.calArray=[],this.calculation=[],this.calResult=0;for(var t=this.bitStringToConvert.substring(1,9),i=t.split(""),s=0;s<i.length;s++){var a=i[s];this.bitStringAsArray.push({bit:a})}var e=t.length;while(e>0)this.powerArray.push({power:e-1}),e-=1;for(s=0;s<i.length;s++){i[s];var r=this.powerArray[s];this.calculations.push({bit:r})}for(s=0;s<i.length;s++)"1"==i[s].toString()&&(this.calArray.push({dig:this.powerArray[s].power}),this.calResult+=Math.pow(2,this.powerArray[s].power));this.bitStringAsArrayM=[],this.powerArrayM=[],this.powerArrayMdisplay=[],this.calArrayM=[],this.calculationM=[],this.calResultM=0;var n=this.bitStringToConvert.substring(9,32),l=n.split(""),o=l.length,c=!1;while(0==c)"1"==l[o]?(o,c=!0):o-=1;for(s=0;s<=o;s++){a=l[s];this.bitStringAsArrayM.push({bit:a})}for(n.length,s=0;s<=o;s++)this.powerArrayM.push({power:s+1}),this.powerArrayMdisplay.push({power:-1*(s+1)});for(s=0;s<=o;s++)"1"==l[s].toString()&&(this.calArrayM.push({dig:-1*this.powerArrayM[s].power}),this.calResultM+=1/Math.pow(2,this.powerArrayM[s].power))}},created(){this.bitStringToConvert=this.inputText,this.arrangeTextInput()}}),c=o,u=s(1001),p=(0,u.Z)(c,n,l,!1,null,null,null),v=p.exports,h={name:"App",components:{IEEE754FloatingPointVisualiser:v}},b=h,_=(0,u.Z)(b,e,r,!1,null,null,null),d=_.exports,g=s(9657),f=s(3017);a["default"].config.productionTip=!1,a["default"].use(g.XG7),a["default"].use(f.X),new a["default"]({render:t=>t(d)}).$mount("#app")}},i={};function s(a){var e=i[a];if(void 0!==e)return e.exports;var r=i[a]={exports:{}};return t[a].call(r.exports,r,r.exports,s),r.exports}s.m=t,function(){var t=[];s.O=function(i,a,e,r){if(!a){var n=1/0;for(u=0;u<t.length;u++){a=t[u][0],e=t[u][1],r=t[u][2];for(var l=!0,o=0;o<a.length;o++)(!1&r||n>=r)&&Object.keys(s.O).every((function(t){return s.O[t](a[o])}))?a.splice(o--,1):(l=!1,r<n&&(n=r));if(l){t.splice(u--,1);var c=e();void 0!==c&&(i=c)}}return i}r=r||0;for(var u=t.length;u>0&&t[u-1][2]>r;u--)t[u]=t[u-1];t[u]=[a,e,r]}}(),function(){s.d=function(t,i){for(var a in i)s.o(i,a)&&!s.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:i[a]})}}(),function(){s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){s.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)}}(),function(){s.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){var t={143:0};s.O.j=function(i){return 0===t[i]};var i=function(i,a){var e,r,n=a[0],l=a[1],o=a[2],c=0;if(n.some((function(i){return 0!==t[i]}))){for(e in l)s.o(l,e)&&(s.m[e]=l[e]);if(o)var u=o(s)}for(i&&i(a);c<n.length;c++)r=n[c],s.o(t,r)&&t[r]&&t[r][0](),t[r]=0;return s.O(u)},a=self["webpackChunksingle_precision_754_to_decimal"]=self["webpackChunksingle_precision_754_to_decimal"]||[];a.forEach(i.bind(null,0)),a.push=i.bind(null,a.push.bind(a))}();var a=s.O(void 0,[998],(function(){return s(8041)}));a=s.O(a)})();
//# sourceMappingURL=app.06348fa5.js.map